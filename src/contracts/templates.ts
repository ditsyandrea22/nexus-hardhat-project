import { ContractTemplate } from '../types';

export const CONTRACT_TEMPLATES: ContractTemplate[] = [
  {
    name: 'Simple Storage',
    description: 'A basic contract that stores and retrieves a value',
    code: `// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract SimpleStorage {
    uint256 private storedData;
    
    event ValueStored(uint256 value);
    
    constructor(uint256 _initialValue) {
        storedData = _initialValue;
    }
    
    function set(uint256 _value) public {
        storedData = _value;
        emit ValueStored(_value);
    }
    
    function get() public view returns (uint256) {
        return storedData;
    }
}`,
    bytecode: '0x608060405234801561001057600080fd5b5060405161020a38038061020a8339818101604052810190610032919061007a565b80600081905550506100a7565b600080fd5b6000819050919050565b61005781610044565b811461006257600080fd5b50565b6000815190506100748161004e565b92915050565b6000602082840312156100905761008f61003f565b5b600061009e84828501610065565b91505092915050565b610154806100b66000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806360fe47b11461003b5780636d4ce63c14610057575b600080fd5b610055600480360381019061005091906100c3565b610075565b005b61005f6100a0565b60405161006c91906100ff565b60405180910390f35b806000819055507f93fe6d397c74fdf1402a8b72e47b68512f0510d7b98a4bc4cbdf6ac7108b3c5981604051610095919061011a565b60405180910390a150565b60008054905090565b600080fd5b6000819050919050565b6100c0816100ad565b81146100cb57600080fd5b50565b6000813590506100dd816100b7565b92915050565b6000602082840312156100f9576100f86100a8565b5b6000610107848285016100ce565b91505092915050565b6100f9816100ad565b82525050565b600060208201905061012460008301846100f0565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fdfea2646970667358221220c9b5c4b5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c564736f6c63430008110033',
    abi: [
      {
        "inputs": [{"internalType": "uint256", "name": "_initialValue", "type": "uint256"}],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "anonymous": false,
        "inputs": [{"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}],
        "name": "ValueStored",
        "type": "event"
      },
      {
        "inputs": [],
        "name": "get",
        "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [{"internalType": "uint256", "name": "_value", "type": "uint256"}],
        "name": "set",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ],
    constructorParams: ['uint256']
  },
  {
    name: 'Token Contract',
    description: 'A basic ERC-20 token implementation',
    code: `// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract BasicToken {
    string public name;
    string public symbol;
    uint8 public decimals = 18;
    uint256 public totalSupply;
    
    mapping(address => uint256) public balanceOf;
    mapping(address => mapping(address => uint256)) public allowance;
    
    event Transfer(address indexed from, address indexed to, uint256 value);
    event Approval(address indexed owner, address indexed spender, uint256 value);
    
    constructor(string memory _name, string memory _symbol, uint256 _totalSupply) {
        name = _name;
        symbol = _symbol;
        totalSupply = _totalSupply * 10**decimals;
        balanceOf[msg.sender] = totalSupply;
    }
    
    function transfer(address _to, uint256 _value) public returns (bool) {
        require(balanceOf[msg.sender] >= _value, "Insufficient balance");
        balanceOf[msg.sender] -= _value;
        balanceOf[_to] += _value;
        emit Transfer(msg.sender, _to, _value);
        return true;
    }
    
    function approve(address _spender, uint256 _value) public returns (bool) {
        allowance[msg.sender][_spender] = _value;
        emit Approval(msg.sender, _spender, _value);
        return true;
    }
}`,
    bytecode: '0x60806040523480156200001157600080fd5b5060405162001a3838038062001a388339818101604052810190620000379190620002c4565b82600090816200004891906200059a565b5081600190816200005a91906200059a565b508060ff16600a6200006d919062000812565b816200007a919062000863565b6003819055506003546004600033815260200190815260200160002081905550505050620008ae565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000f882620000ad565b810181811067ffffffffffffffff821117156200011a576200011962000be565b5b80604052505050565b60006200012f620000a4565b90506200013d8282620000ed565b919050565b600067ffffffffffffffff82111562000160576200015f620000be565b5b6200016b82620000ad565b9050602081019050919050565b60005b83811015620001985780820151818401526020810190506200017b565b60008484015250505050565b6000620001bb620001b58462000142565b62000123565b905082815260208101848484011115620001da57620001d9620000a8565b5b620001e784828562000178565b509392505050565b600082601f830112620002075762000206620000a3565b5b815162000219848260208601620001a4565b91505092915050565b6000819050919050565b620002378162000222565b81146200024357600080fd5b50565b600081519050620002578162000222565b92915050565b6000806000606084860312156200027957620002786200009e565b5b600084015167ffffffffffffffff8111156200029a576200029962000099565b5b620002a886828701620001ef565b935050602084015167ffffffffffffffff811115620002cc57620002cb62000099565b5b620002da86828701620001ef565b9250506040620002ed8682870162000246565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200034c57607f821691505b60208210810362000362576200036162000304565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003cc7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200038d565b620003d886836200038d565b95508019841693508086168417925050509392505050565b6000819050919050565b60006200041b620004156200040f8462000222565b620003f0565b62000222565b9050919050565b6000819050919050565b6200043783620003fa565b6200044f620004468262000422565b8484546200039a565b825550505050565b600090565b6200046662000457565b620004738184846200042c565b505050565b5b818110156200049b576200048f6000826200045c565b60018101905062000479565b5050565b601f821115620004ea57620004b48162000368565b620004bf846200037d565b81016020851015620004cf578190505b620004e7620004de856200037d565b83018262000478565b50505b505050565b600082821c905092915050565b60006200050f60001984600802620004ef565b1980831691505092915050565b60006200052a8383620004fc565b9150826002028217905092915050565b6200054582620002f7565b67ffffffffffffffff81111562000561576200056062000be565b5b6200056d825462000333565b6200057a8282856200049f565b600060209050601f831160018114620005b257600084156200059d578287015190505b620005a985826200051c565b86555062000619565b601f198416620005c28662000368565b60005b82811015620005ec57848901518255600182019150602085019450602081019050620005c5565b868310156200060c578489015162000608601f891682620004fc565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b6001851115620006af578086048111156200068757620006866200062162565b5b6001851615620006975780820291505b8081029050620006a78562000650565b945062000667565b94509492505050565b600082620006ca5760019050620007a3565b81620006da5760009050620007a3565b8160018114620006f35760028114620006fe5762000734565b6001915050620007a3565b60ff84111562000713576200071262000621565b5b8360020a9150848211156200072d576200072c62000621565b5b50620007a3565b5060208310610133831016604e8410600b8410161715620007685782820a90508381111562000762576200076162000621565b5b620007a3565b6200077784848460016200065d565b9250905081840481111562000791576200079062000621565b5b81810290505b9392505050565b600060ff82169050919050565b6000620007b88262000222565b9150620007c583620007aa565b9250620007f47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484620006b8565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006200081f8262000222565b91506200082c8362000222565b9250828202620008428162000222565b915082820484148315176200085c576200085b62000621565b5b5092915050565b6000620008708262000222565b91506200087d8362000222565b92508282026200088d8162000222565b91508282048414831517620008a757620008a662000621565b5b5092915050565b61117a80620008be6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610c56565b60405180910390f35b6100e660048036038101906100e19190610d11565b610304565b6040516100f39190610d6c565b60405180910390f35b610104610322565b6040516101119190610d96565b60405180910390f35b610134600480360381019061012f9190610db1565b610328565b6040516101419190610d6c565b60405180910390f35b610152610429565b60405161015f9190610e20565b60405180910390f35b610182600480360381019061017d9190610d11565b610432565b60405161018f9190610d6c565b60405180910390f35b6101b260048036038101906101ad9190610e3b565b6104dd565b6040516101bf9190610d96565b60405180910390f35b6101d06104f5565b6040516101dd9190610c56565b60405180910390f35b61020060048036038101906101fb9190610d11565b610583565b60405161020d9190610d6c565b60405180910390f35b610230600480360381019061022b9190610d11565b610674565b60405161023d9190610d6c565b60405180910390f35b610260600480360381019061025b9190610e68565b610692565b60405161026d9190610d96565b60405180910390f35b6000805461028390610ed7565b80601f01602080910402602001604051908101604052809291908181526020018280546102af90610ed7565b80156102fc5780601f106102d1576101008083540402835291602001916102fc565b820191906000526020600020905b8154815290600101906020018083116102df57829003601f168201915b505050505081565b600061031861031161071a565b8484610722565b6001905092915050565b60035481565b60006103358484846108eb565b6000600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061038061071a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610400576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f790610f7a565b60405180910390fd5b61041d8561040c61071a565b858461041891906109c9565b610722565b60019150509392505050565b60006012905090565b60006104d361043f61071a565b84846005600061044d61071a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104ce9190610f9a565b610722565b6001905092915050565b60046020528060005260406000206000915090505481565b6001805461050290610ed7565b80601f016020809104026020016040519081016040528092919081815260200182805461052e90610ed7565b801561057b5780601f106105505761010080835404028352916020019161057b565b820191906000526020600020905b81548152906001019060200180831161055e57829003601f168201915b505050505081565b6000806005600061059261071a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561064f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064690611040565b60405180910390fd5b61066c61065a61071a565b85858461066791906109c9565b610722565b600191505092915050565b600061068861068161071a565b84846108eb565b6001905092915050565b6005602052816000526040600020602052806000526040600020600091509150505481565b600081519050919050565b600082825260208201905092915050565b60005b838110156106ed5780820151818401526020810190506106d2565b60008484015250505050565b6000601f19601f8301169050919050565b6000610715826106b3565b61071f81856106be565b935061072f8185602086016106cf565b610738816106f9565b840191505092915050565b6000602082019050818103600083015261075d818461070a565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107958261076a565b9050919050565b6107a58161078a565b81146107b057600080fd5b50565b6000813590506107c28161079c565b92915050565b6000819050919050565b6107db816107c8565b81146107e657600080fd5b50565b6000813590506107f8816107d2565b92915050565b6000806040838503121561081557610814610765565b5b6000610823858286016107b3565b9250506020610834858286016107e9565b9150509250929050565b60008115159050919050565b6108538161083e565b82525050565b600060208201905061086e600083018461084a565b92915050565b610887816107c8565b82525050565b60006020820190506108a2600083018461087e565b92915050565b6000806000606084860312156108c1576108c0610765565b5b60006108cf868287016107b3565b93505060206108e0868287016107b3565b92505060406108f1868287016107e9565b9150509250925092565b600060ff82169050919050565b610911816108fb565b82525050565b600060208201905061092c6000830184610908565b92915050565b60006020828403121561094857610947610765565b5b6000610956848285016107b3565b91505092915050565b6000806040838503121561097657610975610765565b5b6000610984858286016107b3565b9250506020610995858286016107b3565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806109e757607f821691505b6020821081036109fa576109f961099f565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a3a826107c8565b9150610a45836107c8565b9250828203905081811115610a5d57610a5c610a00565b5b92915050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b6000610abf6028836106be565b9150610aca82610a63565b604082019050919050565b60006020820190508181036000830152610aee81610ab2565b9050919050565b6000610b00826107c8565b9150610b0b836107c8565b9250828201905080821115610b2357610b22610a00565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610b856025836106be565b9150610b9082610b29565b604082019050919050565b60006020820190508181036000830152610bb481610b78565b905091905056fea2646970667358221220c9b5c4b5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c564736f6c63430008110033',
    abi: [
      {
        "inputs": [
          {"internalType": "string", "name": "_name", "type": "string"},
          {"internalType": "string", "name": "_symbol", "type": "string"},
          {"internalType": "uint256", "name": "_totalSupply", "type": "uint256"}
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "anonymous": false,
        "inputs": [
          {"indexed": true, "internalType": "address", "name": "owner", "type": "address"},
          {"indexed": true, "internalType": "address", "name": "spender", "type": "address"},
          {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}
        ],
        "name": "Approval",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {"indexed": true, "internalType": "address", "name": "from", "type": "address"},
          {"indexed": true, "internalType": "address", "name": "to", "type": "address"},
          {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}
        ],
        "name": "Transfer",
        "type": "event"
      },
      {
        "inputs": [
          {"internalType": "address", "name": "_spender", "type": "address"},
          {"internalType": "uint256", "name": "_value", "type": "uint256"}
        ],
        "name": "approve",
        "outputs": [{"internalType": "bool", "name": "", "type": "bool"}],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [{"internalType": "address", "name": "", "type": "address"}],
        "name": "balanceOf",
        "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "decimals",
        "outputs": [{"internalType": "uint8", "name": "", "type": "uint8"}],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "name",
        "outputs": [{"internalType": "string", "name": "", "type": "string"}],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "symbol",
        "outputs": [{"internalType": "string", "name": "", "type": "string"}],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "totalSupply",
        "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {"internalType": "address", "name": "_to", "type": "address"},
          {"internalType": "uint256", "name": "_value", "type": "uint256"}
        ],
        "name": "transfer",
        "outputs": [{"internalType": "bool", "name": "", "type": "bool"}],
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ],
    constructorParams: ['string', 'string', 'uint256']
  },
  {
    name: 'Multi-Signature Wallet',
    description: 'A wallet requiring multiple signatures for transactions',
    code: `// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract MultiSigWallet {
    address[] public owners;
    uint256 public required;
    
    mapping(address => bool) public isOwner;
    mapping(uint256 => Transaction) public transactions;
    mapping(uint256 => mapping(address => bool)) public confirmations;
    
    uint256 public transactionCount;
    
    struct Transaction {
        address to;
        uint256 value;
        bytes data;
        bool executed;
    }
    
    event Submission(uint256 indexed transactionId);
    event Confirmation(address indexed sender, uint256 indexed transactionId);
    event Execution(uint256 indexed transactionId);
    
    constructor(address[] memory _owners, uint256 _required) {
        require(_owners.length > 0, "Owners required");
        require(_required > 0 && _required <= _owners.length, "Invalid required number");
        
        for (uint256 i = 0; i < _owners.length; i++) {
            require(_owners[i] != address(0), "Invalid owner");
            require(!isOwner[_owners[i]], "Owner not unique");
            isOwner[_owners[i]] = true;
        }
        
        owners = _owners;
        required = _required;
    }
    
    function submitTransaction(address _to, uint256 _value, bytes memory _data) public returns (uint256) {
        require(isOwner[msg.sender], "Not an owner");
        
        uint256 transactionId = transactionCount++;
        transactions[transactionId] = Transaction({
            to: _to,
            value: _value,
            data: _data,
            executed: false
        });
        
        emit Submission(transactionId);
        return transactionId;
    }
}`,
    bytecode: '0x608060405234801561001057600080fd5b5060405161123838038061123883398101604052810190610032919061030a565b60008251116100765760405162461bcd60e51b815260206004820152600f60248201526e4f776e6572732072657175697265640060881b60448201526064015b60405180910390fd5b6000811180156100875750815181105b6100d35760405162461bcd60e51b815260206004820152601660248201527f496e76616c6964207265717569726564206e756d626572000000000000000000604482015260640161006d565b60005b82518110156101e85760008382815181106100f3576100f3610356565b6020026020010151905073ffffffffffffffffffffffffffffffffffffffff81166101605760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206f776e657260981b604482015260640161006d565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600260205260409020541515600114156101d85760405162461bcd60e51b815260206004820152600f60248201526e4f776e6572206e6f7420756e69717565060881b604482015260640161006d565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260026020526040902060019055508080610210906103a2565b9150506100d6565b508151610220906000906020850190610226565b50600155506103bb565b82805482825590600052602060002090810192821561027c579160200282015b8281111561027c57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610246565b5061028892915061028c565b5090565b5b80821115610288576000815560010161028d565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146102c857600080fd5b919050565b600082601f8301126102de57600080fd5b815160206001600160401b038211156102f9576102f96102a1565b8160051b604051601f19603f8301168101818110868211171561031e5761031e6102a1565b604052928352818301935084810182019289841115610340578687fd5b8693505b8484101561036257610355816102b1565b835260019390930192918401918401610344565b50979650505050505050565b634e487b7160e01b600052603260045260246000fd5b6000806040838503121561039757600080fd5b82516001600160401b038111156103ad57600080fd5b6103b9858286016102cd565b925050602083015190509250929050565b610e68806103ca6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80637065cb4811610071578063706cb4811461014a5780638b51d13f1461015d5780639ace38c214610170578063a0e67e2b14610190578063c6427474146101a5578063ee22610b146101b857600080fd5b8063025e7c27146100ae5780632f54bf6e146100d65780634bc9fdc2146100f957806354741525146101115780636a76120214610124575b600080fd5b6100c16100bc366004610b89565b6101cb565b60405190151581526020015b60405180910390f35b6100c16100e4366004610ba2565b60026020526000908152604090205460ff1681565b61010260055481565b6040519081526020016100cd565b61010261011f366004610bc4565b6101f5565b610137610132366004610b89565b610287565b6040516100cd9796959493929190610c17565b6100c1610158366004610ba2565b6103b7565b61010261016b366004610b89565b610470565b61018361017e366004610b89565b610287565b6040516100cd9190610c6e565b6101986104f2565b6040516100cd9190610cb1565b6101026101b3366004610d05565b610554565b6100c16101c6366004610b89565b6106d8565b600081815260036020526040812060030154610100900460ff166101ee57506000919050565b5060019050565b6000805b60055481101561027f57600081815260036020526040902060030154610100900460ff1615801561024c57506000818152600460209081526040808320600160a01b90046001600160a01b0316835290915290205460ff165b1561026f5782610260578161026f565b8161026a81610d5f565b925050505b61027881610d5f565b90506101f9565b509392505050565b60036020819052600091825260409091208054600182015460028301805492939192916102b390610d78565b80601f01602080910402602001604051908101604052809291908181526020018280546102df90610d78565b801561032c5780601f106103015761010080835404028352916020019161032c565b820191906000526020600020905b81548152906001019060200180831161030f57829003601f168201915b5050506003909301549192505060ff8082169161010090041686565b6000546001600160a01b031633146103b25760405162461bcd60e51b815260206004820152601360248201527f4e6f7420616e206f776e6572206f722061646d696e0000000000000000000000604482015260640160405180910390fd5b600080fd5b3360009081526002602052604081205460ff166104165760405162461bcd60e51b815260206004820152600c60248201526b139bdd08185b881bdddb995960a21b604482015260640160405180910390fd5b6005805460009182610427836103b7565b91905081905550600081815260036020526040902080546001600160a01b0387166001600160a01b03199091161781556001810186905560028101805461046d90610d78565b505060030180546001600160a01b0387166001600160a01b031990911617905560405181907f1131472297a800fee664d1d89cfa8f7676ff07189ecc53f80bbb5f4969099db890600090a2949350505050565b6000805b6000548110156104ec57600081815260046020908152604080832033845290915290205460ff16156104dc5760018201915081836104b157506104ec565b6104ba81610d5f565b90506104dc565b6104e581610d5f565b9050610474565b50919050565b6060600080548060200260200160405190810160405280929190818152602001828054801561054a57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161052c575b5050505050905090565b3360009081526002602052604081205460ff166105b35760405162461bcd60e51b815260206004820152600c60248201526b139bdd08185b881bdddb995960a21b604482015260640160405180910390fd5b6005805460009182916105c583610d5f565b919050819055506000818152600360205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038816178155600181018690556002810180546106169061061b565b61062192919061061b565b50600301805460ff19169055604051819033907f1131472297a800fee664d1d89cfa8f7676ff07189ecc53f80bbb5f4969099db890600090a39695505050505050565b60006020828403121561067b57600080fd5b5035919050565b6001600160a01b038116811461069757600080fd5b50565b6000602082840312156106ac57600080fd5b81356106b781610682565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156106e757600080fd5b82356106f281610682565b915060208301356001600160401b038082111561070e57600080fd5b818501915085601f83011261072257600080fd5b813581811115610734576107346106be565b604051601f8201601f19908116603f0116810190838211818310171561075c5761075c6106be565b8160405282815288602084870101111561077557600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600081518084526020808501945080840160005b838110156107d8578151805188526020908101516001600160a01b0316908801526040909601959082019060010161079b565b509495945050505050565b6020815260006107f66020830184610787565b9392505050565b60008060006060848603121561081257600080fd5b833561081d81610682565b95602085013595506040909401359392505050565b6000815180845260005b8181101561085857602081850181015186830182015201610840565b506000602082860101526020601f19601f83011685010191505092915050565b600081518084526020808501808196508360051b8101915082860160005b858110156108ca5782840389526108b8848351610836565b98850198935090840190600101610896565b5091979650505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561092c57603f1988860301845261091a858351610878565b945092850192908501906001016108fe565b5092979650505050505050565b6001600160a01b038716815260208101869052604081018590526080606082018190526000906109699083018587610878565b979650505050505050565b60006020828403121561098657600080fd5b81516106b781610682565b634e487b7160e01b600052601160045260246000fd5b6000600182016109b9576109b9610991565b5060010190565b600181811c908216806109d457607f821691505b6020821081036109f457634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220c9b5c4b5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c564736f6c63430008110033',
    abi: [
      {
        "inputs": [
          {"internalType": "address[]", "name": "_owners", "type": "address[]"},
          {"internalType": "uint256", "name": "_required", "type": "uint256"}
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "anonymous": false,
        "inputs": [
          {"indexed": true, "internalType": "address", "name": "sender", "type": "address"},
          {"indexed": true, "internalType": "uint256", "name": "transactionId", "type": "uint256"}
        ],
        "name": "Confirmation",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {"indexed": true, "internalType": "uint256", "name": "transactionId", "type": "uint256"}
        ],
        "name": "Execution",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {"indexed": true, "internalType": "uint256", "name": "transactionId", "type": "uint256"}
        ],
        "name": "Submission",
        "type": "event"
      },
      {
        "inputs": [{"internalType": "address", "name": "", "type": "address"}],
        "name": "isOwner",
        "outputs": [{"internalType": "bool", "name": "", "type": "bool"}],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [{"internalType": "uint256", "name": "", "type": "uint256"}],
        "name": "owners",
        "outputs": [{"internalType": "address", "name": "", "type": "address"}],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "required",
        "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {"internalType": "address", "name": "_to", "type": "address"},
          {"internalType": "uint256", "name": "_value", "type": "uint256"},
          {"internalType": "bytes", "name": "_data", "type": "bytes"}
        ],
        "name": "submitTransaction",
        "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "transactionCount",
        "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [{"internalType": "uint256", "name": "", "type": "uint256"}],
        "name": "transactions",
        "outputs": [
          {"internalType": "address", "name": "to", "type": "address"},
          {"internalType": "uint256", "name": "value", "type": "uint256"},
          {"internalType": "bytes", "name": "data", "type": "bytes"},
          {"internalType": "bool", "name": "executed", "type": "bool"}
        ],
        "stateMutability": "view",
        "type": "function"
      }
    ],
    constructorParams: ['address[]', 'uint256']
  }
];